{
  "stats": {
    "suites": 6,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-07T12:35:25.186Z",
    "end": "2025-07-07T12:35:40.388Z",
    "duration": 15202
  },
  "results": [
    {
      "uuid": "d224c2c4-7285-49e5-aab9-24bdd6d2a41f",
      "title": "",
      "fullFile": "cypress/e2e/home.cy.ts",
      "file": "cypress/e2e/home.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
          "title": "Ponyracer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display title on home page",
              "fullTitle": "Ponyracer should display title on home page",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('h1', 'Ponyracer');\ncy.contains('small', 'Always a pleasure to bet on ponies');\ncy.get('.btn-primary').contains('Login').should('have.attr', 'href', '/login');\ncy.get('.btn-primary').contains('Register').should('have.attr', 'href', '/register');",
              "err": {},
              "uuid": "8d9cb4bc-4176-4df1-914b-b1339690f0cb",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar",
              "fullTitle": "Ponyracer should display a navbar",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.get(navbarBrand).contains('PonyRacer').should('have.attr', 'href', '/');\ncy.get(navbarLink).should('not.exist');",
              "err": {},
              "uuid": "d04340da-8d69-4277-83bc-88ae0fd9514b",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar collapsed on small screen",
              "fullTitle": "Ponyracer should display a navbar collapsed on small screen",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.viewport('iphone-6+');\ncy.visit('/');\ncy.contains(navbarBrand, 'PonyRacer');\ncy.get(navbarLink).should('not.be.visible');\n// toggle the navbar\ncy.get('.navbar-toggler').click();\ncy.get(navbarLink).should('be.visible');",
              "err": {},
              "uuid": "154870f6-8261-4112-b618-c2d93f4dbac3",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the logged in user in navbar and a different home",
              "fullTitle": "Ponyracer should display the logged in user in navbar and a different home",
              "timedOut": null,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/');\ncy.get(navbarLink).contains('Races').should('have.attr', 'href', '/races');\ncy.get('#current-user').should('contain', 'cedric').and('contain', '1000');\ncy.get('.btn-primary').contains('Races').should('have.attr', 'href', '/races');",
              "err": {},
              "uuid": "304b2ceb-cca4-4b31-a39e-a232734c600d",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should log out the user",
              "fullTitle": "Ponyracer should log out the user",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\n// user stored should be displayed\ncy.get('#current-user').should('contain', 'cedric').and('contain', '1000');\n// logout\ncy.get('span.fa.fa-power-off').click();\n// should be redirected to home page\ncy.location('pathname')\n    .should('eq', '/')\n    // and localStorage should be clean\n    .and(() => expect(localStorage.getItem('rememberMe')).to.eq(null));\ncy.get(navbarLink).should('not.exist');\n// user is not displayed in navbar\ncy.get('#current-user').should('not.exist');\n// and home page offers the login link\ncy.get('.btn-primary').contains('Login').should('have.attr', 'href', '/login');",
              "err": {},
              "uuid": "4d70a6ce-487e-409e-a9d6-463530f8ae9e",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should animate the transition when the user logs out",
              "fullTitle": "Ponyracer should animate the transition when the user logs out",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/');\n// user stored should be displayed\ncy.get('#current-user').should('contain', 'cedric').and('contain', '1000');\n// logout\ncy.get('span.fa.fa-power-off').click();\n// beginning of the transition\ncy.contains('Races').parent().should('have.class', 'fade-leave-active');\n// end of the transition\ncy.contains('Login').parent().should('have.class', 'fade-enter-active');\n// should still be on the home page\ncy.location('pathname')\n    .should('eq', '/')\n    // and localStorage should be clean\n    .and(() => expect(localStorage.getItem('rememberMe')).to.eq(null));\ncy.get(navbarLink).should('not.exist');\n// user is not displayed in navbar\ncy.get('#current-user').should('not.exist');",
              "err": {},
              "uuid": "f2c0533b-6042-4c8f-9429-7679f73ef0c1",
              "parentUUID": "e36011d0-2e2b-478c-8faa-dd7d5317de5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d9cb4bc-4176-4df1-914b-b1339690f0cb",
            "d04340da-8d69-4277-83bc-88ae0fd9514b",
            "154870f6-8261-4112-b618-c2d93f4dbac3",
            "304b2ceb-cca4-4b31-a39e-a232734c600d",
            "4d70a6ce-487e-409e-a9d6-463530f8ae9e",
            "f2c0533b-6042-4c8f-9429-7679f73ef0c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4a3a7984-3a91-46ed-97a2-be7a6ff45863",
      "title": "",
      "fullFile": "cypress/e2e/live.cy.ts",
      "file": "cypress/e2e/live.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf691237-82f6-4d40-8d77-ddebbcd4475b",
          "title": "Live",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a pending live race",
              "fullTitle": "Live should display a pending live race",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@betRace');\n// emulate a pending race\ncy.intercept('GET', 'api/races/12', {\n    ...race,\n    betPonyId: 2,\n    status: 'PENDING'\n}).as('getPendingRace');\n// go to live\ncy.get('.btn-primary').first().click();\ncy.location('pathname').should('eq', '/races/12/live');\ncy.wait('@getPendingRace');\n// race detail should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('p').should('contain', 'ago');\ncy.get('img').should('have.length', 5);\ncy.get('.selected').should('have.length', 1);",
              "err": {},
              "uuid": "dcecd4b3-ec24-416a-837a-eb7ed706fbe4",
              "parentUUID": "bf691237-82f6-4d40-8d77-ddebbcd4475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a running live race and boost a pony",
              "fullTitle": "Live should display a running live race and boost a pony",
              "timedOut": null,
              "duration": 1694,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\nconst { fakeWS, wsOptions } = buildFakeWS();\ncy.visit('/races', wsOptions);\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@betRace');\n// emulate a running race\ncy.intercept('GET', 'api/races/12', {\n    ...race,\n    betPonyId: 2,\n    status: 'RUNNING'\n}).as('getRunningRace');\n// go to live\ncy.get('.btn-primary').first().click();\ncy.location('pathname').should('eq', '/races/12/live');\ncy.wait('@getRunningRace');\n// eslint-disable-next-line cypress/no-unnecessary-waiting\ncy.wait(400);\n// WebSocket connection created\ncy.get('@ws')\n    .should('be.called')\n    .then(() => fakeWS.emulateRace({\n    ponies: [\n        { id: 1, name: 'Gentle Pie', color: 'YELLOW', position: 30 },\n        { id: 2, name: 'Big Soda', color: 'ORANGE', position: 80 },\n        { id: 3, name: 'Gentle Bottle', color: 'PURPLE', position: 70 },\n        { id: 4, name: 'Superb Whiskey', color: 'GREEN', position: 60 },\n        { id: 5, name: 'Fast Rainbow', color: 'BLUE', position: 30 }\n    ],\n    status: 'RUNNING'\n}));\n// running ponies should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('img').should('have.length', 5);\ncy.get('figure').parent().should('have.attr', 'style').and('include', 'margin-left: 25%;');\ncy.get('.selected')\n    .should('have.length', 1)\n    .then(() => fakeWS.emulateRace({\n    ponies: [\n        { id: 1, name: 'Gentle Pie', color: 'YELLOW', position: 50 },\n        { id: 2, name: 'Big Soda', color: 'ORANGE', position: 90 },\n        { id: 3, name: 'Gentle Bottle', color: 'PURPLE', position: 70 },\n        { id: 4, name: 'Superb Whiskey', color: 'GREEN', position: 65 },\n        { id: 5, name: 'Fast Rainbow', color: 'BLUE', position: 30 }\n    ],\n    status: 'RUNNING'\n}));\ncy.get('img').should('have.length', 5);\ncy.get('figure')\n    .parent()\n    .should('have.attr', 'style')\n    .and('include', 'margin-left: 45%;')\n    .then(() => fakeWS.emulateRace({\n    ponies: [\n        { id: 1, name: 'Gentle Pie', color: 'YELLOW', position: 60, boosted: true },\n        { id: 2, name: 'Big Soda', color: 'ORANGE', position: 90 },\n        { id: 3, name: 'Gentle Bottle', color: 'PURPLE', position: 70 },\n        { id: 4, name: 'Superb Whiskey', color: 'GREEN', position: 65 },\n        { id: 5, name: 'Fast Rainbow', color: 'BLUE', position: 30 }\n    ],\n    status: 'RUNNING'\n}));\n// boost the first pony\n// eslint-disable-next-line cypress/no-unnecessary-waiting\ncy.wait(500);\n// eslint-disable-next-line cypress/unsafe-to-chain-command\ncy.get('img').first().click().click().click().click().click().click();\ncy.wait('@boostPony').its('request.body').should('contain', { ponyId: 1 });\ncy.get('img').should('have.attr', 'src').and('include', '-rainbow.gif');",
              "err": {},
              "uuid": "0af48662-8768-44ce-939a-105323f69f00",
              "parentUUID": "bf691237-82f6-4d40-8d77-ddebbcd4475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a finished live race",
              "fullTitle": "Live should display a finished live race",
              "timedOut": null,
              "duration": 705,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\nconst { fakeWS, wsOptions } = buildFakeWS();\ncy.visit('/races', wsOptions);\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@betRace');\n// emulate a finished race\ncy.intercept('GET', 'api/races/12', {\n    ...race,\n    betPonyId: 2,\n    status: 'RUNNING'\n}).as('getRunningRace');\n// go to live\ncy.get('.btn-primary').first().click();\ncy.location('pathname').should('eq', '/races/12/live');\ncy.wait('@getRunningRace');\n// eslint-disable-next-line cypress/no-unnecessary-waiting\ncy.wait(400);\n// WebSocket connection created\ncy.get('@ws')\n    .should('be.called')\n    // and emulate a finished race\n    .then(() => fakeWS.emulateRace({\n    ponies: [\n        { id: 1, name: 'Gentle Pie', color: 'YELLOW', position: 30 },\n        { id: 2, name: 'Big Soda', color: 'ORANGE', position: 100 },\n        { id: 3, name: 'Gentle Bottle', color: 'PURPLE', position: 70 },\n        { id: 4, name: 'Superb Whiskey', color: 'GREEN', position: 60 },\n        { id: 5, name: 'Fast Rainbow', color: 'BLUE', position: 30 }\n    ],\n    status: 'FINISHED'\n}));\n// victorious pony should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('img').should('have.length', 1);\ncy.get('.selected').should('have.length', 1);\ncy.get('.alert.alert-success').should('have.text', 'You won your bet!');",
              "err": {},
              "uuid": "4f684101-c2eb-4a19-801a-d106e2cc5d29",
              "parentUUID": "bf691237-82f6-4d40-8d77-ddebbcd4475b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcecd4b3-ec24-416a-837a-eb7ed706fbe4",
            "0af48662-8768-44ce-939a-105323f69f00",
            "4f684101-c2eb-4a19-801a-d106e2cc5d29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2a5da8c7-3309-42b7-a2e4-f1345d32b25d",
      "title": "",
      "fullFile": "cypress/e2e/login.cy.ts",
      "file": "cypress/e2e/login.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aaceff7f-d7a0-4293-9031-aed7d9ad2c2b",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a login page",
              "fullTitle": "Login should display a login page",
              "timedOut": null,
              "duration": 755,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nsubmitButton().click();\ncy.wait('@authenticateUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "1f2ff507-cf3d-4529-827f-2b658f558f8a",
              "parentUUID": "aaceff7f-d7a0-4293-9031-aed7d9ad2c2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an alert and shake the button if login fails",
              "fullTitle": "Login should display an alert and shake the button if login fails",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.intercept('POST', 'api/users/authentication', {\n    statusCode: 404\n}).as('failedAuthenticateUser');\nloginInput().type('ced');\npasswordInput().type('pa');\nsubmitButton().should('not.have.class', 'shake');\nsubmitButton().click();\ncy.wait('@failedAuthenticateUser');\ncy.location('pathname').should('eq', '/login');\ncy.get('.alert-danger').should('contain', 'Nope, try again');\nsubmitButton().should('have.class', 'shake');",
              "err": {},
              "uuid": "99250055-f35f-428c-9d29-c82393b54557",
              "parentUUID": "aaceff7f-d7a0-4293-9031-aed7d9ad2c2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f2ff507-cf3d-4529-827f-2b658f558f8a",
            "99250055-f35f-428c-9d29-c82393b54557"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a33b008c-e8ed-4a0d-ad55-e10f5c16a5f7",
      "title": "",
      "fullFile": "cypress/e2e/races.cy.ts",
      "file": "cypress/e2e/races.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1027a802-cb48-41a2-b9e1-503a69c60bbc",
          "title": "Races",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a race list",
              "fullTitle": "Races should display a race list",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/races');\n// should redirect to home page as the user is not logged\ncy.location('pathname')\n    .should('eq', '/')\n    .then(\n// log the user and try again\n() => storeUserInLocalStorage());\ncy.visit('/races');\n// loading\ncy.contains('div', 'Loading');\ncy.wait('@getRaces');\ncy.get('h2').should('have.length', 2);\ncy.get('p').should('have.length', 2).and('contain', 'ago');\ncy.get('div.alert').should('not.exist');",
              "err": {},
              "uuid": "40a449f1-f47b-4783-87dc-b4ade60cb130",
              "parentUUID": "1027a802-cb48-41a2-b9e1-503a69c60bbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a loading error",
              "fullTitle": "Races should display a loading error",
              "timedOut": null,
              "duration": 551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\n// override the response to have an error\ncy.intercept('GET', 'api/races?status=PENDING', {\n    statusCode: 404,\n    delay: 500\n}).as('getRacesError');\ncy.visit('/races');\n// loading\ncy.contains('div', 'Loading');\ncy.wait('@getRacesError');\ncy.contains('div.alert', 'An error occurred while loading');",
              "err": {},
              "uuid": "0c8a8a37-daed-4149-9993-841efef63342",
              "parentUUID": "1027a802-cb48-41a2-b9e1-503a69c60bbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display ponies",
              "fullTitle": "Races should display ponies",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\ncy.get('figure').should('have.length', 10);\ncy.get('img').should('have.length', 10);\ncy.get('figcaption').should('have.length', 10);",
              "err": {},
              "uuid": "f3270459-c02e-4bb8-b899-204e13d5173c",
              "parentUUID": "1027a802-cb48-41a2-b9e1-503a69c60bbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40a449f1-f47b-4783-87dc-b4ade60cb130",
            "0c8a8a37-daed-4149-9993-841efef63342",
            "f3270459-c02e-4bb8-b899-204e13d5173c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40e1442e-121d-41d9-b675-3ffb74020cd5",
      "title": "",
      "fullFile": "cypress/e2e/register.cy.ts",
      "file": "cypress/e2e/register.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "344ec141-035f-43b4-a2fb-b998fdb61f2d",
          "title": "Register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a register page",
              "fullTitle": "Register should display a register page",
              "timedOut": null,
              "duration": 1544,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/register');\nconst loginInput = () => cy.get('input').first();\nconst passwordInput = () => cy.get('input[type=password]').first();\nconst confirmInput = () => cy.get('input[type=password]').eq(1);\nconst birthYearInput = () => cy.get('input[type=number]');\nconst errorMessage = () => cy.get('.invalid-feedback');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nconfirmInput().type('p');\nconfirmInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The password confirmation is required');\nconfirmInput().type('p');\nerrorMessage().should('be.visible').and('contain', 'The password confirmation does not match');\nconfirmInput().type('a');\nerrorMessage().should('not.exist');\nbirthYearInput().clear();\nerrorMessage().should('be.visible').and('contain', 'The birth year is required');\nbirthYearInput().type(`${new Date().getFullYear() - 17}`);\nerrorMessage().should('be.visible').and('contain', `You're not old enough to bet on ponies`);\nbirthYearInput().clear();\nbirthYearInput().type('1986');\nerrorMessage().should('not.exist');\ncy.get('form > button').click();\ncy.wait('@registerUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "f21e7fc2-5d5d-49ae-b106-451979932939",
              "parentUUID": "344ec141-035f-43b4-a2fb-b998fdb61f2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f21e7fc2-5d5d-49ae-b106-451979932939"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "594a3989-12c4-4efa-ba4c-b070b56116c5",
      "title": "",
      "fullFile": "cypress/e2e/bet.cy.ts",
      "file": "cypress/e2e/bet.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c83e0e20-5071-4afc-ada9-0e9494d10bec",
          "title": "Bet",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should bet on ponies and cancel",
              "fullTitle": "Bet should bet on ponies and cancel",
              "timedOut": null,
              "duration": 743,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace').its('request.headers').should('have.property', 'authorization', `Bearer ${user.token}`);\ncy.location('pathname').should('eq', '/races/12');\n// race detail should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('p').should('contain', 'ago');\ncy.get('img').should('have.length', 5);\n// no pony is selected\ncy.get('.selected').should('have.length', 0);\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@betRace').its('request.body').should('contain', { ponyId: 1 });\n// a pony is now selected\ncy.get('.selected').should('have.length', 1);\n// bet on the second one\ncy.intercept('POST', 'api/races/12/bets', { ...race, betPonyId: 2 }).as('secondBetRace');\ncy.get('img').eq(1).click();\ncy.wait('@secondBetRace').its('request.body').should('contain', { ponyId: 2 });\n// a pony is still selected\ncy.get('.selected').should('have.length', 1);\n// bet fails\ncy.intercept('POST', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedBetRace');\n// cancel fails\ncy.intercept('DELETE', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedCancelBetRace');\n// cancel bet on second pony\ncy.get('img').eq(1).click();\ncy.wait('@failedCancelBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@failedBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\ncy.intercept('DELETE', 'api/races/12/bets', {}).as('cancelBetRace');\n// cancel bet\ncy.get('img').eq(1).click();\ncy.wait('@cancelBetRace');\n// no pony is selected anymore\ncy.get('.selected').should('have.length', 0);",
              "err": {},
              "uuid": "4538e5a4-d167-44b2-a791-d2c7cfa92fbb",
              "parentUUID": "c83e0e20-5071-4afc-ada9-0e9494d10bec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4538e5a4-d167-44b2-a791-d2c7cfa92fbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}